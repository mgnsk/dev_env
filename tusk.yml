---
options:
  uid:
    default: 3000
  gid:
    default: 3000
  user:
    default: user
  group:
    default: user
tasks:
  build:
    usage: Build the toolbox-base and toolbox images.
    run:
      - command: >
          podman-compose
          build
          --pull
          --build-arg uid=${uid}
          --build-arg gid=${gid}
          --build-arg user=${user}
          --build-arg group=${group}
      - command: podman image prune -f

  bash:
    usage: Run a bash shell as the container UID in user namespace while mounting a shifted view of the filesystem.
    args:
      workspace:
        usage: The workspace directory to run in.
    options:
      tmp:
        private: yes
        default:
          command: podman unshare ./mount.sh ${uid} ${gid} ${workspace}
    run:
      - set-environment:
          WORKSPACE_ROOT: ${tmp}/merged
      - command: podman-compose -p dev-env run --rm --service-ports toolbox /bin/bash
    finally:
      - command: podman unshare fusermount3 -u ${tmp}/merged
      - command: rm -rf ${tmp}
      # TODO
      - command: find ${workspace} \( -type c -or \( -type f -and -name ".wh..wh..opq" \) \) -delete

  root:
    args:
      workspace:
        usage: The workspace directory to run in.
    run:
      - set-environment:
          WORKSPACE_ROOT: ${workspace}
      - command: podman-compose -p dev-env run --rm --service-ports --user root toolbox /bin/bash

  clean:
    run:
      - command: podman pod kill dev-env || true
      - command: podman pod rm dev-env || true
      - command: for v in $(podman volume ls | awk 'NR>1 {print $2}' | grep "^dev-env"); do podman volume rm $v; done
