options:
  container_uid:
    default: 3000
  container_gid:
    default: 3000
  dot_url:
    default: https://github.com/mgnsk/dotfiles.git
  dot_commit:
    default: 2f8866bfb68e4bfef52d9d9fe48877d0b3f7c872

tasks:
  build:
    run:
      - command: >
          podman-compose
          build
          --build-arg uid=${container_uid}
          --build-arg gid=${container_gid}
          --build-arg dot_url=${dot_url}
          --build-arg dot_commit=${dot_commit}
      - command: podman image prune -f

  root:
    usage: Run a root shell.
    run:
      - command: mkdir -p ./mount
      - command: podman-compose -p dev-env run --rm --service-ports --user root dev-env /bin/bash

  bash:
    usage: Run bash shell as a non-root user.
    description: The ./code dir is mounted to be accessible to the container.
    run:
      # lowerdir - an empty directory used as the read-only lowerdir
      # workdir - fuse-overlayfs workdir
      # mount - the merged result dir
      - command: rm -rf lowerdir workdir mount
      - command: mkdir -p lowerdir code workdir mount
      # Remove the previous character special and opaque whiteout files created by the overlay.
      - command: find ./code -type c -exec rm -f {} \;
      - command: find . -type f -name ".wh..wh..opq" -exec rm {} \;
      - command: podman unshare fuse-overlayfs -o uidmapping=0:${container_uid}:1,gidmapping=0:${container_gid}:1,lowerdir=lowerdir,upperdir=code,workdir=workdir mount
      - command: podman-compose -p dev-env run --rm --service-ports dev-env /bin/bash

  clean:
    run:
      - command: podman pod kill dev-env || true
      - command: podman pod rm dev-env || true
      - command: podman rmi mgnsk/dev-env || true

  ci-build:
    run:
      - command: >
          docker
          build
          --pull
          --build-arg uid=${container_uid}
          --build-arg gid=${container_gid}
          --build-arg dot_url=${dot_url}
          --build-arg dot_commit=${dot_commit}
          -t mgnsk/dev-env:latest
          ./image

  ci-push:
    run:
      command: |
        echo "$DOCKER_TOKEN" | docker login -u mgnsk --password-stdin
        docker push mgnsk/dev-env:latest
