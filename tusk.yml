---
options:
  uid:
    default: 3000
  gid:
    default: 3000
  user:
    default: user
  group:
    default: user
  upperdir:
    default:
      command: echo "$(pwd)/code"
tasks:
  build:
    run:
      - command: >
          podman-compose
          build
          --pull
          --build-arg uid=${uid}
          --build-arg gid=${gid}
          --build-arg user=${user}
          --build-arg group=${group}
      - command: podman image prune -f

  bash:
    options:
      dir:
        default:
          command: echo "$(pwd)/.fuse-$(cat /proc/sys/kernel/random/uuid | cut -c-8)"
      lowerdir:
        default: ${dir}/lowerdir
      workdir:
        default: ${dir}/workdir
      merged:
        default: ${dir}/merged
    run:
      - command: mkdir -p ${lowerdir} ${workdir} ${merged}
      - command: >
          podman unshare fuse-overlayfs -o
          uidmapping=0:${uid}:1,gidmapping=0:${gid}:1,lowerdir=${lowerdir},upperdir=${upperdir},workdir=${workdir},noxattrs=1,fsync=1,threaded=1
          ${merged}
      - set-environment:
          CODE_DIR: ${merged}
      - command: podman-compose -p dev-env run --rm --service-ports toolbox /bin/bash
    finally:
      - command: podman unshare fusermount3 -u ${merged}
      - command: rm -rf ${dir}
      - command: find ${upperdir} \( -type c -or \( -type f -and -name ".wh..wh..opq" \) \) -delete

  root:
    run:
      - set-environment:
          CODE_DIR: ${upperdir}
      - command: podman-compose -p dev-env run --rm --service-ports --user root toolbox /bin/bash

  kill:
    run:
      - command: podman pod kill dev-env || true
      - command: podman pod rm dev-env || true

  drop-vols:
    run:
      - command: for v in $(podman volume ls | awk 'NR>1 {print $2}' | grep "^dev-env"); do podman volume rm $v; done

  drop-image:
    run:
      - command: podman rmi mgnsk/toolbox || true
      - command: podman rmi mgnsk/toolbox-base || true

  destroy:
    run:
      - task: kill
      - task: drop-vols
      - task: drop-image
