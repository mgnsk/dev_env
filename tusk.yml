tasks:
  build:
    options:
      cmd:
        default: podman
    run:
    - command: >
        ${cmd}
        build
        --pull
        --squash
        --build-arg UID=3000
        --build-arg GID=3000
        --build-arg USER=user
        --build-arg GROUP=user
        -t mgnsk/dev-env:latest
        ./image

  bash:
    usage: Run bash shell as a non-root user.
    options:
      uid:
        default:
          command: id -u
      gid:
        default:
          command: id -g

    run:
    # Create the code directory. Files created by the container will be owned by the host group on the host.
    # The container is run with umask 002 so files created by the container are group-writable on the host.
    # Files created by the host must have ACL applied to be writable by the container.
    - command: mkdir -p ./code
    - command: chgrp +${gid} ./code
    - command: chmod g+s ./code
    # Give the container GID 3000 write permissions.
    # Assuming /etc/subgid is set up to map host GID 100000 to container GID 0.
    # Give recursive permissions to existing files.
    - command: podman unshare setfacl -Rm g:3001:rwX ./code
    # Set default permissions for new files.
    - command: podman unshare setfacl -Rdm g:3001:rwX ./code
    - command: >
        ./create_volumes.sh
        dev-env_ssh-key
        #dev-env_coc-data
        #dev-env_nvim-data
        #dev-env_direnv-allow-cache
        #dev-env_tmux-resurrect
    - command: >
        podman
        run
        --rm
        --cap-drop=ALL
        --runtime crun
        --memory 2g
        --userns=auto:size=4000
        --privileged
        --mount type=bind,source="$PWD/code",target=/code
        --mount type=bind,source="$PWD/scripts",target=/scripts
        --entrypoint /scripts/entrypoint.sh
        --hostname dev-env
        -it
        mgnsk/dev-env
        /bin/bash

        #--mount type=volume,source=dev-env_coc-data,target=/homedir/.config/coc
        #--mount type=volume,source=dev-env_nvim-data,target=/homedir/.local/share/nvim
        #--mount type=volume,source=dev-env_ssh-key,target=/homedir/.ssh
        #--mount type=volume,source=dev-env_direnv-allow-cache,target=/homedir/.local/share/direnv
        #--mount type=volume,source=dev-env_tmux-resurrect,target=/homedir/.tmux/resurrect
  clean:
    run:
    - command: podman rmi mgnsk/dev-env

  prune-volumes:
    run:
    - command: podman volume rm dev-env_ssh-key || true
    - command: podman volume rm dev-env_coc-data || true
    - command: podman volume rm dev-env_nvim-data || true
    - command: podman volume rm dev-env_direnv-allow-cache || true
    - command: podman volume rm dev-env_tmux-resurrect || true

  push:
    usage: Push from docker CI.
    run:
      command: |
        echo "$DOCKER_TOKEN" | docker login -u mgnsk --password-stdin
        docker push mgnsk/dev-env:latest
